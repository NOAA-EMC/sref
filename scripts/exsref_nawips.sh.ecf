#!/bin/ksh
###################################################################
echo "----------------------------------------------------"
echo "exnawips - convert NCEP GRIB files into GEMPAK Grids"
echo "----------------------------------------------------"
echo "History: Mar 2000 - First implementation of this new script."
echo "S Lilly: May 2008 - add logic to make sure that all of the "
echo "                    data produced from the restricted ECMWF"
echo "                    data on the CCS is properly protected."
#####################################################################

set -xa

member=$1;

export 'PS4=${member}:$SECONDS + '

DATA_RUN=$DATA/$member
mkdir -p $DATA_RUN
cd $DATA_RUN
#
# Copy special table wmogrib2.tbl, ncepgrib2.tbl
# and vcrdgrib1.tbl into $DATA
#
cp $GEMPAKsref/fix/sref_wmogrib2.tbl wmogrib2.tbl
cp $GEMPAKsref/fix/sref_ncepgrib2.tbl ncepgrib2.tbl
cp $GEMPAKsref/fix/sref_vcrdgrib1.tbl vcrdgrib1.tbl
cp $GEMPAKsref/fix/g2varsncep1.tbl g2varsncep1.tbl
cp $GEMPAKsref/fix/g2varswmo2.tbl g2varswmo2.tbl
cp $GEMPAKsref/fix/g2vcrdncep1.tbl g2vcrdncep1.tbl
cp $GEMPAKsref/fix/g2vcrdwmo2.tbl g2vcrdwmo2.tbl

# Run setup to initialize working directory and utility scripts

msg="Begin job for $job - $member"
postmsg "$jlogfile" "$msg"

#
 NAGRIB=nagrib2
 
  cpyfil=gds
  garea=dset
  gbtbls=
  maxgrd=6000
  kxky=
  grdarea=
  proj=
  output=T
pdsext=no

echo $job |grep 132
export err=$?

if [ $err -eq 0 ]; then
  grd=132
else
  grd=212
fi 
 
maxtries=180
fhcnt=$fstart
while [ $fhcnt -le $fend ] ; do
  if [ $fhcnt -ge 100 ] ; then
    typeset -Z3 fhr
  else
    typeset -Z2 fhr
  fi
  fhr=$fhcnt

  fhr3=$fhcnt
  typeset -Z3 fhr3
  
  case $RUN in 
    sref)   if [ "$model" = "em" -o "$model" = "arw" -o "$model" = "nmm" -o "$model" = "nmb" ]; then
#    	      GRIBIN=$COMIN/${RUN}_${model}.${cycle}.pgrb${grd}.${member}
     	      GRIBIN=$COMIN/${RUN}_${model}.${cycle}.pgrb${grd}.${member}.grib2
              GEMGRD=${RUN}${grd}_${PDY}${cyc}_${model}_${member}
            else
             # echo $job |grep biasc
             # export err=$?
             # if [ $err -eq 0 ]; then 
             #   GRIBIN=$COMIN/${RUN}.${cycle}.pgrb${grd}.${member}
             #   GEMGRD=${RUN}${grd}_${PDY}${cyc}_${member}
             #   pdsext=YES
             # else
#             GRIBIN=$COMIN/${RUN}.${cycle}.pgrb${grd}.${member}_3hrly
              GRIBIN=$COMIN/${RUN}.${cycle}.pgrb${grd}.${member}_3hrly.grib2
              GEMGRD=${RUN}${grd}_${PDY}${cyc}_${member}
              pdsext=YES
             # fi
            fi;;
#   spcsref) GRIBIN=$COMIN/${NET}_${model}.${cycle}.pgrb212.${member}.f${gempak_time}
    spcsref) GRIBIN=$COMIN/${NET}_${model}.${cycle}.pgrb212.${member}.f${gempak_time}.grib2
             GEMGRD=${PDY}_${NET}_${model}.${cycle}.pgrb212.${member}.f${gempak_time}.gem ;;
  esac

# GRIBIN_chk=${GRIBIN}.grib2.idx
  GRIBIN_chk=${GRIBIN}.idx

  icnt=1
  while [ $icnt -lt 1000 ]
  do
    if [ -r $GRIBIN_chk ] ; then
      break
    else
      let "icnt=icnt+1"
      sleep 20
    fi
    if [ $icnt -ge $maxtries ]
    then
      msg="ABORTING after 1 hour of waiting for F$fhr to end."
      err_exit $msg
    fi
  done
  
  cp $GRIBIN grib$fhr

  if [ "$model" = "ensemble" -o $RUN = "sref" ] ; then
    export pgm=" $NAGRIB $RUN "
  else
    export pgm=" $NAGRIB F$fhr "
  fi

  startmsg

  $NAGRIB << EOF
   GBFILE   = grib$fhr
   INDXFL   = 
   GDOUTF   = $GEMGRD
   PROJ     = $proj
   GRDAREA  = $grdarea
   KXKY     = $kxky
   MAXGRD   = $maxgrd
   CPYFIL   = $cpyfil
   GAREA    = $garea
   OUTPUT   = $output
   GBTBLS   = $gbtbls
   GBDIAG   = 
   PDSEXT   = $pdsext
  l
  r
EOF
  export err=$?;err_chk

  #####################################################
  # GEMPAK DOES NOT ALWAYS HAVE A NON ZERO RETURN CODE
  # WHEN IT CAN NOT PRODUCE THE DESIRED GRID.  CHECK
  # FOR THIS CASE HERE.
  #####################################################
  if [ "$NAGRIB" = "nagrib2" ] ; then
    gpend
  fi

  if [ $SENDCOM = "YES" ] ; then
     mv $GEMGRD $COMOUT/$GEMGRD
     if [ $SENDDBN = "YES" ] ; then
         $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE} $job \
           $COMOUT/$GEMGRD
     fi
  fi
   
    let fhcnt=fhcnt+finc
done

#####################################################################
# GOOD RUN
set +x
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
set -x
#####################################################################

msg='Job completed normally.'
echo $msg
postmsg "$jlogfile" "$msg"

############################### END OF SCRIPT #######################
