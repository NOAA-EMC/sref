#!/bin/ksh
###################################################################
echo "----------------------------------------------------"
echo "exnawips - convert NCEP GRIB files into GEMPAK Grids"
echo "----------------------------------------------------"
echo "History: Mar 2000 - First implementation of this new script."
echo "S Lilly: May 2008 - add logic to make sure that all of the "
echo "                    data produced from the restricted ECMWF"
echo "                    data on the CCS is properly protected."
#####################################################################

set -xa

cd $DATA

msg="Begin job for $job"
postmsg "$jlogfile" "$msg"

#
NAGRIB=nagrib2_nc
 
  cpyfil=gds
  garea=dset
  gbtbls=
  maxgrd=6000
  kxky=
  grdarea=
  proj=
  output=T
pdsext=no

maxtries=180
fhcnt=$fstart

while [ $fhcnt -le $fend ] ; do
  if [ $fhcnt -ge 100 ] ; then
    typeset -Z3 fhr
  else
    typeset -Z2 fhr
  fi
  fhr=$fhcnt

  fhr3=$fhcnt
  typeset -Z3 fhr3
  
  method=`echo $METHOD | tr [A-Z] [a-z]`
  
  for file in `ls $COMIN/sref.t${cyc}z.mean_cluster*.f$fhr.grib2`
  do 
  cluster=`echo $file |awk -F. '{print $4}' | awk -F"_" '{print $2}'`
  GRIBIN=$file
  GEMGRD=${RUN}_mean_${cluster}_${method}_${PDY}${cyc}f$fhr
      
  cp $GRIBIN grib$fhr

  export pgm=" $NAGRIB F$fhr "

  startmsg

  $NAGRIB << EOF
   GBFILE   = grib$fhr
   INDXFL   = 
   GDOUTF   = $GEMGRD
   PROJ     = $proj
   GRDAREA  = $grdarea
   KXKY     = $kxky
   MAXGRD   = $maxgrd
   CPYFIL   = $cpyfil
   GAREA    = $garea
   OUTPUT   = $output
   GBTBLS   = $gbtbls
   GBDIAG   = 
   PDSEXT   = $pdsext
  l
  r
EOF
  export err=$?;err_chk

  #####################################################
  # GEMPAK DOES NOT ALWAYS HAVE A NON ZERO RETURN CODE
  # WHEN IT CAN NOT PRODUCE THE DESIRED GRID.  CHECK
  # FOR THIS CASE HERE.
  #####################################################
  if [ "$NAGRIB" = "nagrib2" ] ; then
    gpend
  fi

  if [ $SENDCOM = "YES" ] ; then
     mv $GEMGRD $COMOUT/$GEMGRD
     # No need to alert the data out, turn it off - 02/20/2014
     # if [ $SENDDBN = "YES" ] ; then
     #    $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE} $job \
     #      $COMOUT/$GEMGRD
     # fi
  fi

  done  # for mean
  
#  if [ $METHOD = NCEP ]; then
#
#    for file in `ls $COMIN/wgt.*f${fhr}*grib2`
#    do
#      GRIBIN=$file
#      GEMGRD=${RUN}_wgt_${cluster}_${method}_${PDY}${cyc}f$fhr
#      NAGRIB=nagrib2_nc
#      cp $GRIBIN grib$fhr
#
#  export pgm=" $NAGRIB F$fhr"
#
#  startmsg
#
#  $GEMEXE/$NAGRIB << EOF
#   GBFILE   = grib$fhr
#   INDXFL   = 
#   GDOUTF   = $GEMGRD
#   PROJ     = $proj
#   GRDAREA  = $grdarea
#   KXKY     = $kxky
#   MAXGRD   = $maxgrd
#   CPYFIL   = $cpyfil
#   GAREA    = $garea
#   OUTPUT   = $output
#   GBTBLS   = $gbtbls
#   GBDIAG   = 
#   PDSEXT   = $pdsext
#  l
#  r
##EOF
#  export err=$?;err_chk

#  #####################################################
#  # GEMPAK DOES NOT ALWAYS HAVE A NON ZERO RETURN CODE
#  # WHEN IT CAN NOT PRODUCE THE DESIRED GRID.  CHECK
#  # FOR THIS CASE HERE.
#  #####################################################
#  if [ "$NAGRIB" = "nagrib2" ] ; then
#    gpend
#  fi
#
#  if [ $SENDCOM = "YES" ] ; then
#     mv $GEMGRD $COMOUT/$GEMGRD
#     if [ $SENDDBN = "YES" ] ; then
#         $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE} $job \
#           $COMOUT/$GEMGRD
#     fi
#  fi
#
#  done  # for wgt
#  fi

    let fhcnt=fhcnt+finc
done

#####################################################################
# GOOD RUN
set +x
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
echo "**************JOB $RUN NAWIPS COMPLETED NORMALLY ON THE IBM"
set -x
#####################################################################

msg='Job completed normally.'
echo $msg
postmsg "$jlogfile" "$msg"

############################### END OF SCRIPT #######################
