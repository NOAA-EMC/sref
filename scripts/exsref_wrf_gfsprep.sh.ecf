#!/bin/ksh
################################################################################
# UNIX Script Documentation Block                              
#                                                              
# Script name:         exsref_wrf_gfsprep.sh.sms              
# Script description:  Run global post to convert global sigma file to pgrib data 
#                      to initiate SREF WRF members                              
#                                                                              
# Author:        Jun Du       Org: NP22         Date: 2007-08-14            
#                                                        
# Script history log:                                          
# 2007-08-14  Jun Du   - Initial Implementation
# 2008-05-20  Jun Du   - (1) modified to include all GEFS members and change the
#                        name convention for the new configuration of WRF members;
#                        (2) to run it separately by disconnecting to models and 
#                        membership information for generality
# 2011-07-18  Jun Du   - Output GEFS in 0.5Deg due to the increased resolution 
#                        of GEFS to T254
# 2011-09-26  Jun Du   - moved the membership control option to the sms/J-JOB step
#                        to significantly speed up this step by processing all members 
#                        simutaneously
# 2013-12-17  Jeff McQueen  - removed seperate codes for CTL or perturbed members
#                             by adding variable gmdl
# 2017-02-27  Jun Du - the ctl (gfs) files are directly from gfs master pgrb files
# 2019-03-25  Jun Du - Convert to Dell
# 2020-04-08  Jun Du - Use pgrb instead of model native outputs from GEFS
#
################################################################################

set -x
echo "******WRF_GFSPREP*******" `pwd`
yy=`echo $PDY | cut -c1-4`
mm=`echo $PDY | cut -c5-6`
dd=`echo $PDY | cut -c7-8`

msg="JOB $job FOR WRF HAS BEGUN"

typeset -Z2 gfscyc 

# ------------------------------------------------------------------------------
# convert global sigma data to pgrb data FOR GENERATING INITIAL AND BOUNDARY CONDITIONS
# -----------------------------------------------------------------------------
let "last=LENGTH + 6"
whr=$START
gfscyc=$cyc

if [ $MEMBER = "ctl" ];then
## for ctl run (using hires 0.5 degree gfs data)
  MODEL=GFS
  gmdl=gfs
  res=5
else
## for perturb runs (using gefs 0.5 degree data)
  MODEL=gens
  gmdl=gefs
  res=5
fi

# SREF Cycle times
if [ $cyc -eq 03 -o $cyc -eq 09 -o $cyc -eq 15 -o $cyc -eq 21 ]; then
   let "gfscyc=cyc-3"
fi

fhr=$whr
>$DATA/cmdfile_$gmdl
while [ $fhr -le $last ]; do
  mkdir -p $DATA/${MEMBER}_$fhr
  echo "SUBMIT sref_prep_sig2pgb or sref_prep_gfs2pgrb for" GFSCYC $gfscyc  MEMBER $MEMBER  MODEL $MODEL FHR $fhr

if [ $MEMBER = "ctl" ];then
  echo "$USHsref/sref_prep_gfspgrb.sh $DATE $gfscyc $MEMBER $MEMBER $fhr $res $MODEL >$DATA/postgb_${fhr}.out 2>&1" >>$DATA/cmdfile_$gmdl
else
# if using global_post to convert sig and flux into pgrb files:
# echo "$USHsref/sref_prep_sig2pgb.sh $DATE $gfscyc $MEMBER $MEMBER $fhr $res $MODEL >$DATA/postgb_${fhr}.out 2>&1" >>$DATA/cmdfile_$gmdl
# if directly use pgrb files:
  echo "$USHsref/sref_prep_gfspgrb.sh $DATE $gfscyc $MEMBER $MEMBER $fhr $res $MODEL >$DATA/postgb_${fhr}.out 2>&1" >>$DATA/cmdfile_$gmdl
fi

  if [ $fhr -lt 126 ]; then 
    INCR=3
  else
    INCR=6
  fi

  fhr=`expr $fhr + $INCR`
  if [ $fhr -lt 10 ];then fhr=0$fhr;fi
done  

chmod 775 $DATA/cmdfile_$gmdl   #jtm

export MP_PGMMODEL=mpmd
export MP_CMDFILE=$DATA/cmdfile_$gmdl 
export MP_STDOUTMODE=ordered
export MP_LABELIO=yes
export MP_INFOLEVEL=3

echo "MPIRUN cmdfile_$gmdl"
echo "IN DIR" ${DATA}
echo "COMINgens" $COMINgens
echo "COMINgfs" $COMINgfs
cat cmdfile_$gmdl

mpirun cfp $DATA/cmdfile_$gmdl >${DATA}/postgbmpi_$fhr.out 2>&1 
#mpirun -np $N_TASK $DATA/cmdfile_$gmdl >${DATA}/postgbmpi_$fhr.out 2>&1 
export err=$?; err_chk

rm -f flxfile sigfile
rm -f ${MODEL}.t${gfscyc}z.master.grbif*
rm -f ${MODEL}_${MEMBER}.t${gfscyc}z.pgrbif*

####################################################
msg="HAS COMPLETED NORMALLY!"
echo $msg
postmsg "$jlogfile" "$msg"

############## END OF SCRIPT #######################

exit

